fragment AccountMetadata on accounts {
  label
  image
  id
  atom_id
  type
}

fragment AccountClaimsAggregate on accounts {
  claims_aggregate(order_by: { shares: desc }) {
    aggregate {
      count
    }
    nodes {
      triple {
        id
      }
      shares
      counter_shares
    }
  }
}

fragment AccountClaims on accounts {
  claims(
    order_by: { shares: desc }
    limit: $claimsLimit
    offset: $claimsOffset
    where: $claimsWhere
  ) {
    triple {
      id
    }
    shares
    counter_shares
  }
}

fragment AccountPositionsAggregate on accounts {
  positions_aggregate(order_by: { shares: desc }) {
    aggregate {
      count
    }
    nodes {
      id
      shares
      vault {
        id
        total_shares
        current_share_price
        atom {
          id
          label
        }
        triple {
          id
        }
      }
    }
  }
}

fragment AccountPositions on accounts {
  positions(
    order_by: { shares: desc }
    limit: $positionsLimit
    offset: $positionsOffset
    where: $positionsWhere
  ) {
    id
    shares
    vault {
      id
      total_shares
      current_share_price
      atom {
        id
        label
      }
      triple {
        id
      }
    }
  }
}

fragment AccountAtoms on accounts {
  atoms(
    where: $atomsWhere
    order_by: $atomsOrderBy
    limit: $atomsLimit
    offset: $atomsOffset
  ) {
    id
    label
    data
    vault {
      total_shares
      positions_aggregate(where: { account_id: { _eq: $address } }) {
        nodes {
          account {
            id
          }
          shares
        }
      }
    }
  }
}

fragment AccountAtomsAggregate on accounts {
  atoms_aggregate(
    where: $atomsWhere
    order_by: $atomsOrderBy
    limit: $atomsLimit
    offset: $atomsOffset
  ) {
    aggregate {
      count
      sum {
        id
      }
    }
    nodes {
      id
      label
      data
      vault {
        total_shares
        positions_aggregate(where: { account_id: { _eq: $address } }) {
          nodes {
            account {
              id
            }
            shares
          }
        }
      }
    }
  }
}

fragment AccountTriples on accounts {
  triples_aggregate(
    where: $triplesWhere
    order_by: $triplesOrderBy
    limit: $triplesLimit
    offset: $triplesOffset
  ) {
    aggregate {
      count
    }
    nodes {
      id
      subject {
        id
        label
      }
      predicate {
        id
        label
      }
      object {
        id
        label
      }
    }
  }
}

fragment AccountTriplesAggregate on accounts {
  triples_aggregate(
    where: $triplesWhere
    order_by: $triplesOrderBy
    limit: $triplesLimit
    offset: $triplesOffset
  ) {
    aggregate {
      count
    }
    nodes {
      id
      subject {
        id
        label
      }
      predicate {
        id
        label
      }
      object {
        id
        label
      }
    }
  }
}
