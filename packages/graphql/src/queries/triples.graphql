# Main pagination query
query GetTriples(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
) {
  total: triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  triples(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    ...TripleMetadata
    ...TripleTxn
    ...TripleVaultDetails
    creator {
      ...AccountMetadata
    }
  }
}

# Combined query with aggregates and nodes
query GetTriplesWithAggregates(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
) {
  triples_aggregate(
    limit: $limit
    offset: $offset
    order_by: $orderBy
    where: $where
  ) {
    aggregate {
      count
    }
    nodes {
      ...TripleMetadata
      ...TripleTxn
      ...TripleVaultDetails
      creator {
        ...AccountMetadata
      }
    }
  }
}

query GetTriplesCount($where: triples_bool_exp) {
  triples_aggregate(where: $where) {
    total: aggregate {
      count
    }
  }
}

query GetTriple($tripleId: numeric!) {
  triple(id: $tripleId) {
    ...TripleMetadata
    ...TripleTxn
    ...TripleVaultDetails
    creator {
      ...AccountMetadata
    }
  }
}

query GetAtomTriplesWithPositions($where: triples_bool_exp) {
  triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetTriplesWithPositions(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
  $address: String
) {
  total: triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  triples(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    id
    vault_id
    counter_vault_id
    subject {
      id
      vault_id
      label
      image
    }
    predicate {
      id
      vault_id
      label
      image
    }
    object {
      id
      vault_id
      label
      image
    }
    vault {
      total_shares
      position_count
      positions(where: { account_id: { _eq: $address } }) {
        account {
          id
          label
          image
        }
        shares
      }
    }
    counter_vault {
      total_shares
      position_count
      positions(where: { account_id: { _eq: $address } }) {
        account {
          id
          label
          image
        }
        shares
      }
    }
  }
}
